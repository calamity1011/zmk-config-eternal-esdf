/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE        0
#define QWERTY      1
#define ARROW       2
#define FUNC        3

/ {
  chosen {
      zmk,kscan = &kscan0;
      zmk,matrix-transform = &default_transform;
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
                    &kp ESC   &kp N1    &kp N2    &kp N3  &kp N4     &kp N5  &kp N6
                    &kp TAB   &kp T     &kp Q     &kp W   &kp E      &kp R   &kp N7
        &kp F13     &kp ENTER &kp G     &kp A     &kp S   &kp D      &kp F   &kp N8
        &kp F14     &kp LSHFT &kp Z     &kp X     &kp C   &kp V      &kp B   &kp N9
        &kp F15     &kp LCTRL &sl FUNC  &kp LALT          &kp SPACE          &lt ARROW N0
      >;
    };

    qwerty_layer {
      bindings = <
                    &kp ESC    &kp N1    &kp N2    &kp N3    &kp N4     &kp N5  &kp N6
                    &kp TAB    &kp Q     &kp W     &kp E     &kp R      &kp T   &kp N7
        &kp F13     &kp ENTER  &kp A     &kp S     &kp D     &kp F      &kp G   &kp N8
        &kp F14     &kp LSHFT  &kp Z     &kp X     &kp C     &kp V      &kp B   &kp N9
        &kp F15     &kp LCTRL  &sl FUNC  &kp LALT            &kp SPACE          &lt ARROW N0
      >;
    };

    arrow_layer {
      bindings = <
                    &trans  &trans  &trans    &trans     &trans     &trans  &trans
                    &trans  &trans  &trans    &kp UP     &trans     &trans  &trans
        &trans      &trans  &trans  &kp LEFT  &kp DOWN   &kp RIGHT  &trans  &trans
        &trans      &trans  &trans  &trans    &trans     &trans     &trans  &trans
        &trans      &trans  &trans  &trans               &trans             &trans
      >;
    };

    function_layer {
      bindings = <
                      &bootloader  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3   &bt BT_SEL 4   &tog QWERTY
                      &trans       &trans         &trans         &trans          &trans         &trans         &trans
        &bt BT_CLR    &trans       &trans         &trans         &trans          &trans         &trans         &trans
        &out OUT_USB  &trans       &trans         &trans         &trans          &trans         &trans         &trans
        &out OUT_BLE  &trans       &trans         &trans                         &trans                        &trans
      >;
    };
  };
};
